version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing dependencies...
      - pip install -r requirements.txt
      - pip install pytest pytest-cov pytest-flask black flake8 isort mypy

  pre_build:
    commands:
      - echo Running code quality checks...
      - echo Running black...
      - black app/ tests/ *.py --check || (echo "Black formatting check failed. Please run 'black app/ tests/ *.py' to format the code." && exit 1)
      - echo Running flake8...
      - flake8 app/ tests/ *.py
      - echo Running isort...
      - isort app/ tests/ *.py --check-only
      - echo Running mypy...
      - mypy app/ tests/ *.py
      - echo Running unit tests...
      - python -m pytest tests/ --cov=app --cov-report=xml
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

reports:
  coverage:
    files:
      - '**/*'
    base-directory: 'coverage'
    file-format: 'COBERTURA'
  test:
    files:
      - '**/*'
    base-directory: 'test-reports'
    file-format: 'JUNITXML'

artifacts:
  files:
    - '**/*'
  discard-paths: yes